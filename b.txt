/* Generated by CIL v. 1.3.7 */
/* print_CIL_Input is false */

/* compiler builtin: 
   __builtin_varargs_start : TFun(TVoid(), : TBuiltin_va_list(), ) ;  */
/* compiler builtin: 
   __builtin_strcmp : TFun(TInt(int, ), : TPtr(TInt(char,  const  ), ), : TPtr(TInt(char,
                                                                                     const  ),
                           ),
) ;  */
/* compiler builtin: 
   __builtin___memmove_chk : TFun(TPtr(TVoid(), ), : TPtr(TVoid(), ), : TPtr(TVoid( const  ),
                                  ), : TInt(unsigned long,
                                  ),
                                  : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_strpbrk : TFun(TPtr(TInt(char, ), ), : TPtr(TInt(char,  const  ), ),
                            : TPtr(TInt(char,  const  ), ), ) ;  */
/* compiler builtin: 
   __builtin_memcpy : TFun(TPtr(TVoid(), ), : TPtr(TVoid(), ), : TPtr(TVoid( const  ),
                           ), : TInt(unsigned long,
                           ),
) ;  */
/* compiler builtin: 
   __builtin_exp : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_nanl : TFun(TFloat(long double, ), : TPtr(TInt(char,  const  ), ), ) ;  */
/* compiler builtin: 
   __builtin_cos : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_strchr : TFun(TPtr(TInt(char, ), ), : TPtr(TInt(char, ), ), : TInt(int,
                           ),
) ;  */
/* compiler builtin: 
   __builtin_atan2f : TFun(TFloat(float, ), : TFloat(float, ), : TFloat(float, ),
) ;  */
/* compiler builtin: 
   __builtin___memcpy_chk : TFun(TPtr(TVoid(), ), : TPtr(TVoid(), ), : TPtr(TVoid( const  ),
                                 ), : TInt(unsigned long,
                                 ),
                                 : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_asin : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_ctz : TFun(TInt(int, ), : TInt(unsigned int, ), ) ;  */
/* compiler builtin: 
   __builtin_stpcpy : TFun(TPtr(TInt(char, ), ), : TPtr(TInt(char, ), ), : TPtr(TInt(char,
                                                                                      const  ),
                           ),
) ;  */
/* compiler builtin: 
   __builtin_ia32_unpckhps : TFun(TFloat(float,  __attribute__((____vector_size____(16))) ),
                                  : TFloat(float,  __attribute__((____vector_size____(16))) ),
                                  : TFloat(float,  __attribute__((____vector_size____(16))) ),
) ;  */
/* compiler builtin: 
   __builtin_nans : TFun(TFloat(double, ), : TPtr(TInt(char,  const  ), ), ) ;  */
/* compiler builtin: 
   __builtin_atan2l : TFun(TFloat(long double, ), : TFloat(long double, ), : TFloat(long double,
                           ),
) ;  */
/* compiler builtin: 
   __builtin_logf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin___fprintf_chk : TFun(TInt(int, ), : TPtr(TVoid(), ), : TInt(int, ), : TPtr(TInt(char,
                                                                                              const  ),
                                  )...,
) ;  */
/* compiler builtin: 
   __builtin___vsprintf_chk : TFun(TInt(int, ), : TPtr(TInt(char, ), ), : TInt(int,
                                   ),
                                   : TInt(unsigned long, ), : TPtr(TInt(char,  const  ),
                                   ), : TBuiltin_va_list(),
) ;  */
/* compiler builtin: 
   __builtin___strncpy_chk : TFun(TPtr(TInt(char, ), ), : TPtr(TInt(char, ), ), : TPtr(TInt(char,
                                                                                             const  ),
                                  ),
                                  : TInt(unsigned long, ), : TInt(unsigned long, ),
) ;  */
/* compiler builtin: 
   __builtin_ia32_subps : TFun(TFloat(float,  __attribute__((____vector_size____(16))) ),
                               : TFloat(float,  __attribute__((____vector_size____(16))) ),
                               : TFloat(float,  __attribute__((____vector_size____(16))) ),
) ;  */
/* compiler builtin: 
   __builtin_log10f : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_atan : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_alloca : TFun(TPtr(TVoid(), ), : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_va_end : TFun(TVoid(), : TBuiltin_va_list(), ) ;  */
/* compiler builtin: 
   __builtin_strncmp : TFun(TInt(int, ), : TPtr(TInt(char,  const  ), ), : TPtr(TInt(char,
                                                                                      const  ),
                            ),
                            : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_sin : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_logl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_coshf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin___mempcpy_chk : TFun(TPtr(TVoid(), ), : TPtr(TVoid(), ), : TPtr(TVoid( const  ),
                                  ), : TInt(unsigned long,
                                  ),
                                  : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin___strcat_chk : TFun(TPtr(TInt(char, ), ), : TPtr(TInt(char, ), ), : TPtr(TInt(char,
                                                                                            const  ),
                                 ),
                                 : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_nansf : TFun(TFloat(float, ), : TPtr(TInt(char,  const  ), ), ) ;  */
/* compiler builtin: 
   __builtin_memset : TFun(TPtr(TVoid(), ), : TPtr(TVoid(), ), : TInt(int, ), : TInt(int,
                           ),
) ;  */
/* compiler builtin: 
   __builtin_va_copy : TFun(TVoid(), : TBuiltin_va_list(), : TBuiltin_va_list(), ) ;  */
/* compiler builtin: 
   __builtin_sinhf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_log10l : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_coshl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_strlen : TFun(TInt(unsigned long, ), : TPtr(TInt(char,  const  ), ),
) ;  */
/* compiler builtin: 
   __builtin_ffs : TFun(TInt(int, ), : TInt(unsigned int, ), ) ;  */
/* compiler builtin: 
   __builtin_asinf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_nansl : TFun(TFloat(long double, ), : TPtr(TInt(char,  const  ), ), ) ;  */
/* compiler builtin: 
   __builtin_frexp : TFun(TFloat(double, ), : TFloat(double, ), : TPtr(TInt(int, ),
                          ), ) ;  */
/* compiler builtin: 
   __builtin_tan : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_sinhl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_frexpf : TFun(TFloat(float, ), : TFloat(float, ), : TPtr(TInt(int, ),
                           ), ) ;  */
/* compiler builtin: 
   __builtin_asinl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_frame_address : TFun(TPtr(TVoid(), ), : TInt(unsigned int, ), ) ;  */
/* compiler builtin: 
   __builtin_floor : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_tanhf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_parityl : TFun(TInt(int, ), : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_clzl : TFun(TInt(int, ), : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_powi : TFun(TFloat(double, ), : TFloat(double, ), : TInt(int, ), ) ;  */
/* compiler builtin: 
   __builtin_frexpl : TFun(TFloat(long double, ), : TFloat(long double, ), : TPtr(TInt(int,
                                                                                  ),
                           ),
) ;  */
/* compiler builtin: 
   __builtin_atanf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_huge_valf : TFun(TFloat(float, ), , ) ;  */
/* compiler builtin: 
   __builtin_sqrtf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_fmodf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_object_size : TFun(TInt(unsigned long, ), : TPtr(TVoid(), ), : TInt(int,
                                ),
) ;  */
/* compiler builtin: 
   __builtin_va_arg : TFun(TVoid(), : TBuiltin_va_list(), : TInt(unsigned long, ),
                           : TPtr(TVoid(), ), ) ;  */
/* compiler builtin: 
   __builtin_stdarg_start : TFun(TVoid(), : TBuiltin_va_list(), ) ;  */
/* compiler builtin: 
   __builtin_ia32_mulps : TFun(TFloat(float,  __attribute__((____vector_size____(16))) ),
                               : TFloat(float,  __attribute__((____vector_size____(16))) ),
                               : TFloat(float,  __attribute__((____vector_size____(16))) ),
) ;  */
/* compiler builtin: 
   __builtin_tanhl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_nan : TFun(TFloat(double, ), : TPtr(TInt(char,  const  ), ), ) ;  */
/* compiler builtin: 
   __builtin_return : TFun(TVoid(), : TPtr(TVoid( const  ), ), ) ;  */
/* compiler builtin: 
   __builtin_atanl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_huge_vall : TFun(TFloat(long double, ), , ) ;  */
/* compiler builtin: 
   __builtin_inff : TFun(TFloat(float, ), , ) ;  */
/* compiler builtin: 
   __builtin_sqrtl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_fmodl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin___printf_chk : TFun(TInt(int, ), : TInt(int, ), : TPtr(TInt(char,  const  ),
                                 )..., ) ;  */
/* compiler builtin: 
   __builtin_floorf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_fabsf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_popcountll : TFun(TInt(int, ), : TInt(unsigned long long, ), ) ;  */
/* compiler builtin: 
   __builtin___sprintf_chk : TFun(TInt(int, ), : TPtr(TInt(char, ), ), : TInt(int,
                                  ), : TInt(unsigned long,
                                  ),
                                  : TPtr(TInt(char,  const  ), )..., ) ;  */
/* compiler builtin: 
   __builtin___vprintf_chk : TFun(TInt(int, ), : TInt(int, ), : TPtr(TInt(char,  const  ),
                                  ), : TBuiltin_va_list(),
) ;  */
/* compiler builtin: 
   __builtin_ia32_maxps : TFun(TFloat(float,  __attribute__((____vector_size____(16))) ),
                               : TFloat(float,  __attribute__((____vector_size____(16))) ),
                               : TFloat(float,  __attribute__((____vector_size____(16))) ),
) ;  */
/* compiler builtin: 
   __builtin___snprintf_chk : TFun(TInt(int, ), : TPtr(TInt(char, ), ), : TInt(unsigned long,
                                   ),
                                   : TInt(int, ), : TInt(unsigned long, ), : TPtr(TInt(char,
                                                                                        const  ),
                                   )...,
) ;  */
/* compiler builtin: 
   __builtin_infl : TFun(TFloat(long double, ), , ) ;  */
/* compiler builtin: 
   __builtin_mempcpy : TFun(TPtr(TVoid(), ), : TPtr(TVoid(), ), : TPtr(TVoid( const  ),
                            ), : TInt(unsigned long,
                            ),
) ;  */
/* compiler builtin: 
   __builtin_floorl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_ctzl : TFun(TInt(int, ), : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_fabsl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_clz : TFun(TInt(int, ), : TInt(unsigned int, ), ) ;  */
/* compiler builtin: 
   __builtin_fabs : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_popcount : TFun(TInt(int, ), : TInt(unsigned int, ), ) ;  */
/* compiler builtin: 
   __builtin_bcopy : TFun(TVoid(), : TPtr(TVoid( const  ), ), : TPtr(TVoid(), ), : TInt(unsigned long,
                          ),
) ;  */
/* compiler builtin: 
   __builtin_ceil : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_ldexp : TFun(TFloat(double, ), : TFloat(double, ), : TInt(int, ), ) ;  */
/* compiler builtin: 
   __builtin_sinf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_acosf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin___vsnprintf_chk : TFun(TInt(int, ), : TPtr(TInt(char, ), ), : TInt(unsigned long,
                                    ),
                                    : TInt(int, ), : TInt(unsigned long, ), : TPtr(TInt(char,
                                                                                         const  ),
                                    ),
                                    : TBuiltin_va_list(), ) ;  */
/* compiler builtin: 
   __builtin_sinh : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_ffsll : TFun(TInt(int, ), : TInt(unsigned long long, ), ) ;  */
/* compiler builtin: 
   __builtin___strcpy_chk : TFun(TPtr(TInt(char, ), ), : TPtr(TInt(char, ), ), : TPtr(TInt(char,
                                                                                            const  ),
                                 ),
                                 : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_inf : TFun(TFloat(double, ), , ) ;  */
/* compiler builtin: 
   __builtin_prefetch : TFun(TVoid(), : TPtr(TVoid( const  ), )..., ) ;  */
/* compiler builtin: 
   __builtin_sinl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_acosl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_sqrt : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_fmod : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_strcpy : TFun(TPtr(TInt(char, ), ), : TPtr(TInt(char, ), ), : TPtr(TInt(char,
                                                                                      const  ),
                           ),
) ;  */
/* compiler builtin: 
   __builtin_ceilf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_return_address : TFun(TPtr(TVoid(), ), : TInt(unsigned int, ), ) ;  */
/* compiler builtin: 
   __builtin___stpcpy_chk : TFun(TPtr(TInt(char, ), ), : TPtr(TInt(char, ), ), : TPtr(TInt(char,
                                                                                            const  ),
                                 ),
                                 : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_tanf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_parityll : TFun(TInt(int, ), : TInt(unsigned long long, ), ) ;  */
/* compiler builtin: 
   __builtin_ldexpf : TFun(TFloat(float, ), : TFloat(float, ), : TInt(int, ), ) ;  */
/* compiler builtin: 
   __builtin_types_compatible_p : TFun(TInt(int, ), : TInt(unsigned long, ), : TInt(unsigned long,
                                       ),
) ;  */
/* compiler builtin: 
   __builtin_log10 : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_expf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_clzll : TFun(TInt(int, ), : TInt(unsigned long long, ), ) ;  */
/* compiler builtin: 
   __builtin_ia32_unpcklps : TFun(TFloat(float,  __attribute__((____vector_size____(16))) ),
                                  : TFloat(float,  __attribute__((____vector_size____(16))) ),
                                  : TFloat(float,  __attribute__((____vector_size____(16))) ),
) ;  */
/* compiler builtin: 
   __builtin_tanh : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_constant_p : TFun(TInt(int, ), : TInt(int, ), ) ;  */
/* compiler builtin: 
   __builtin_ceill : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_va_arg_pack_len : TFun(TInt(int, ), , ) ;  */
/* compiler builtin: 
   __builtin_apply : TFun(TPtr(TVoid(), ), : TPtr(TFun(TVoid(), None, ), ), : TPtr(TVoid(),
                          ),
                          : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_tanl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_log : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_ldexpl : TFun(TFloat(long double, ), : TFloat(long double, ), : TInt(int,
                           ),
) ;  */
/* compiler builtin: 
   __builtin_popcountl : TFun(TInt(int, ), : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_expl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin___memset_chk : TFun(TPtr(TVoid(), ), : TPtr(TVoid(), ), : TInt(int, ),
                                 : TInt(unsigned long, ), : TInt(unsigned long, ),
) ;  */
/* compiler builtin: 
   __builtin___strncat_chk : TFun(TPtr(TInt(char, ), ), : TPtr(TInt(char, ), ), : TPtr(TInt(char,
                                                                                             const  ),
                                  ),
                                  : TInt(unsigned long, ), : TInt(unsigned long, ),
) ;  */
/* compiler builtin: 
   __builtin_huge_val : TFun(TFloat(double, ), , ) ;  */
/* compiler builtin: 
   __builtin_next_arg : TFun(TBuiltin_va_list(), , ) ;  */
/* compiler builtin: 
   __builtin_apply_args : TFun(TPtr(TVoid(), ), , ) ;  */
/* compiler builtin: 
   __builtin_powif : TFun(TFloat(float, ), : TFloat(float, ), : TInt(int, ), ) ;  */
/* compiler builtin: 
   __builtin___vfprintf_chk : TFun(TInt(int, ), : TPtr(TVoid(), ), : TInt(int, ),
                                   : TPtr(TInt(char,  const  ), ), : TBuiltin_va_list(),
) ;  */
/* compiler builtin: 
   __builtin_modff : TFun(TFloat(float, ), : TFloat(float, ), : TPtr(TFloat(float,
                                                                     ), ),
) ;  */
/* compiler builtin: 
   __builtin_atan2 : TFun(TFloat(double, ), : TFloat(double, ), : TFloat(double, ),
) ;  */
/* compiler builtin: 
   __builtin_strncpy : TFun(TPtr(TInt(char, ), ), : TPtr(TInt(char, ), ), : TPtr(TInt(char,
                                                                                       const  ),
                            ),
                            : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_powil : TFun(TFloat(long double, ), : TFloat(long double, ), : TInt(int,
                          ),
) ;  */
/* compiler builtin: 
   __builtin_cosf : TFun(TFloat(float, ), : TFloat(float, ), ) ;  */
/* compiler builtin: 
   __builtin_bzero : TFun(TVoid(), : TPtr(TVoid(), ), : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_strspn : TFun(TInt(unsigned long, ), : TPtr(TInt(char,  const  ), ),
                           : TPtr(TInt(char,  const  ), ), ) ;  */
/* compiler builtin: 
   __builtin_modfl : TFun(TFloat(long double, ), : TFloat(long double, ), : TPtr(TFloat(long double,
                                                                                 ),
                          ),
) ;  */
/* compiler builtin: 
   __builtin_parity : TFun(TInt(int, ), : TInt(unsigned int, ), ) ;  */
/* compiler builtin: 
   __builtin_cosh : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_strncat : TFun(TPtr(TInt(char, ), ), : TPtr(TInt(char, ), ), : TPtr(TInt(char,
                                                                                       const  ),
                            ),
                            : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_expect : TFun(TInt(long, ), : TInt(long, ), : TInt(long, ), ) ;  */
/* compiler builtin: 
   __builtin_acos : TFun(TFloat(double, ), : TFloat(double, ), ) ;  */
/* compiler builtin: 
   __builtin_va_arg_pack : TFun(TInt(int, ), , ) ;  */
/* compiler builtin: 
   __builtin_ia32_addps : TFun(TFloat(float,  __attribute__((____vector_size____(16))) ),
                               : TFloat(float,  __attribute__((____vector_size____(16))) ),
                               : TFloat(float,  __attribute__((____vector_size____(16))) ),
) ;  */
/* compiler builtin: 
   __builtin_cosl : TFun(TFloat(long double, ), : TFloat(long double, ), ) ;  */
/* compiler builtin: 
   __builtin_va_start : TFun(TVoid(), : TBuiltin_va_list(), ) ;  */
/* compiler builtin: 
   __builtin_ctzll : TFun(TInt(int, ), : TInt(unsigned long long, ), ) ;  */
/* compiler builtin: 
   __builtin_strcspn : TFun(TInt(unsigned long, ), : TPtr(TInt(char,  const  ), ),
                            : TPtr(TInt(char,  const  ), ), ) ;  */
/* compiler builtin: 
   __builtin_ffsl : TFun(TInt(int, ), : TInt(unsigned long, ), ) ;  */
/* compiler builtin: 
   __builtin_nanf : TFun(TFloat(float, ), : TPtr(TInt(char,  const  ), ), ) ;  */
#line 8 "root.c"
extern printf : TFun(TInt(int, ), None,  /* missing proto */  ) ;
#line 11
extern strtod : TFun(TInt(int, ), None,  /* missing proto */  ) ;
#line 15
extern sqrt : TFun(TInt(int, ), None,  /* missing proto */  ) ;
#line 24
extern VALGRIND_PRINT_ERROR : TFun(TInt(int, ), None,  /* missing proto */  ) ;
#line 26
extern VALGRIND_DUMP_ERROR_GRAPH : TFun(TInt(int, ), None,  /* missing proto */  ) ;
#line 6 "root.c"
main : TFun(TInt(int, ), argc: TInt(int, ), argv: TPtr(TPtr(TInt(char, ), ), ), ) 
{ input : TArray(TInt(char, ), Some(Const(Int64(800,int,None))), ) ;
  entptr : TPtr(TInt(char, ), ) ;
  a : TFloat(float, ) ;
  b : TFloat(float, ) ;
  tmp : TInt(int, ) ;
  c : TFloat(float, ) ;
  r : TFloat(float, ) ;
  tmp___0 : TInt(int, ) ;

  {
#line 8
  Lval(Var(printf, NoOffset))(Const(CStr("Test program: gsl_function\n")));
#line 10
  Var(a, NoOffset) = CastE(TFloat(float, ), Const(CReal(7.000000, double, 7.0)));
#line 11
  Var(tmp, NoOffset) = Lval(Var(strtod, NoOffset))(Lval(Mem(IndexPI(Lval(Var(argv,
                                                                             NoOffset)),
                                                                    Const(Int64(1,int,None))),
                                                            NoOffset)), AddrOf(Var(entptr,
                                                                                   NoOffset)));
#line 11
  Var(b, NoOffset) = CastE(TFloat(float, ), Lval(Var(tmp, NoOffset)));
#line 13
  Var(c, NoOffset) = CastE(TFloat(float, ), Const(CReal(2.000000, double, 2.0)));
#line 15
  Var(tmp___0, NoOffset) = Lval(Var(sqrt, NoOffset))(MinusA(CastE(TFloat(double, ),
                                                                  *(Lval(Var(b, NoOffset)),
                                                                    Lval(Var(b, NoOffset)))),
                                                            *(*(Const(CReal(4.000000, double, 4.0)),
                                                                CastE(TFloat(double,
                                                                      ), Lval(Var(a,
                                                                                         NoOffset)))),
                                                              CastE(TFloat(double,
                                                                    ), Lval(Var(c,
                                                                                       NoOffset))))));
#line 15
  Var(r, NoOffset) = CastE(TFloat(float, ), /(CastE(TFloat(double, ), PlusA(UnOp(-,
                                                                                 Lval(Var(b,
                                                                                          NoOffset))),
                                                                            CastE(TFloat(float,
                                                                                  ),
                                                                                  Lval(Var(tmp___0,
                                                                                           NoOffset))))),
                                              *(Const(CReal(2.000000, double, 2.0)),
                                                CastE(TFloat(double, ), Lval(Var(a,
                                                                                 NoOffset))))));
#line 17
  Lval(Var(printf, NoOffset))(Const(CStr("%.10e\n")), Lval(Var(r, NoOffset)));
#line 18
  __asm__  ("booo_exp(root.c:18)":);
#line 21
  Lval(Var(printf, NoOffset))(Const(CStr("Not running on valgrind\n")));
#line 24
  __asm__  ("booo_exp(root.c:24)":);
#line 24
  Lval(Var(VALGRIND_PRINT_ERROR, NoOffset))(Const(Int64(0,int,None)), AddrOf(Var(r,
                                                                                 NoOffset)));
#line 26
  __asm__  ("booo_exp(root.c:26)":);
#line 26
  Lval(Var(VALGRIND_DUMP_ERROR_GRAPH, NoOffset))(Const(Int64(0,int,None)), AddrOf(Var(r,
                                                                                      NoOffset)));
#line 27
  return (Const(Int64(0,int,None)));
}
}
